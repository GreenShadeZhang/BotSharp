// <auto-generated />
using System;
using BotSharp.Plugin.Pgvector.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace BotSharp.Plugin.Pgvector.Migrations
{
    [DbContext(typeof(PgvectorDbContext))]
    [Migration("20250703142623_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BotSharp.Plugin.Pgvector.Entities.VectorCollection", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<string>("DistanceFunction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("cosine");

                    b.Property<string>("IndexType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("hnsw");

                    b.Property<bool>("IsIndexed")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Name");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Type");

                    b.ToTable("vector_collections");
                });

            modelBuilder.Entity("BotSharp.Plugin.Pgvector.Entities.VectorData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DataSource")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("api");

                    b.Property<Vector>("Embedding")
                        .IsRequired()
                        .HasColumnType("vector");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("CollectionName");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DataSource");

                    b.HasIndex("PayloadJson");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("PayloadJson"), "gin");

                    b.ToTable("vector_data");
                });

            modelBuilder.Entity("BotSharp.Plugin.Pgvector.Entities.VectorData", b =>
                {
                    b.HasOne("BotSharp.Plugin.Pgvector.Entities.VectorCollection", "Collection")
                        .WithMany("VectorData")
                        .HasForeignKey("CollectionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("BotSharp.Plugin.Pgvector.Entities.VectorCollection", b =>
                {
                    b.Navigation("VectorData");
                });
#pragma warning restore 612, 618
        }
    }
}
